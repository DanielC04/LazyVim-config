;; extends 

; (("import" @include) (#set! conceal "󰶮"))
; (("continue" @keyword) (#set! conceal "C"))
; (("global" @keyword) (#set! conceal "G"))
; (("with" @keyword) (#set! conceal "w"))
; (("else" @conditional) (#set! conceal "e"))
; (("for" @repeat) (#set! conceal "F"))
; (("if" @conditional) (#set! conceal "?"))
; ((yield ("from") @keyword) (#set! conceal "F"))
; ((call function: (identifier) @function.builtin (#eq? @function.builtin "print")) (#set! conceal "p"))
; (("not" @keyword.operator) (#set! conceal "!"))
; (("or" @keyword.operator) (#set! conceal "|"))
; (("def" @keyword.function) (#set! conceal " "))
; (("return" @keyword) (#set! conceal "R"))
; (("elif" @conditional) (#set! conceal "e"))
; ((import_from_statement ("from") @include) (#set! conceal "f"))
; (("and" @keyword.operator) (#set! conceal "&"))
; (("while" @repeat) (#set! conceal "W"))
; (("yield" @keyword) (#set! conceal "Y"))
; (("del" @keyword) (#set! conceal "D"))
; (("lambda" @include) (#set! conceal "λ"))
; (("break" @keyword) (#set! conceal "B"))
; (("pass" @keyword) (#set! conceal "P"))
; (("class" @keyword) (#set! conceal ""))
; (("assert" @keyword) (#set! conceal "?"))
